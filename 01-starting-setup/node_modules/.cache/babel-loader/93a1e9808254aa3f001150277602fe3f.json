{"ast":null,"code":"var _jsxFileName = \"/home/hyunjun/\\uC5F0\\uC2B5_git_react_practice/01-starting-setup/src/conponents/NewExpense/ExpenseForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './ExpenseForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ExpenseForm = props => {\n  _s();\n\n  const [enteredTitle, setEnteredTitle] = useState(''); // Title 관련 useState\n\n  const [enteredAmount, setEnteredAmount] = useState(''); // Amount 관련 useState\n\n  const [enteredDate, setEnteredDate] = useState(''); // Date 관련 useState\n\n  const [viewForm, setViewForm] = useState(false); // const [userInput, setUserInput]=useState({ // 여러개의 상태를 하나의 상태로 만들어줌.\n  //     enteredTitle: '',\n  //     enteredAmount: '',\n  //     enteredDate: ''\n  // })\n  // Title 상태 변경 함수 ( onChange )\n\n  const titleChangeHandler = event => {\n    setEnteredTitle(event.target.value); // setUserInput({\n    //     ...userInput, // 앞에 내용을 복사하지 않으면 state는 전에 있던 내용을 간직하는게 아니라 현재의 값만 남겨버린다.\n    //     // 그래서 전에 값을 복사하고 변경되는 값만 재할당 해준다.\n    //     enteredTitle:event.target.value,\n    // })\n  }; // Amount 상태 변경 함수 ( onChange )\n\n\n  const amountChangeHandler = event => {\n    setEnteredAmount(event.target.value); // titleChangeHandler 와 다른 방법이 있는데 이 방법을 사용하는 것이 더 좋아보인다. \n    // 그 이유는 객체의 상태로 리액트를 계속 사용하게 되면 이전의 상태에 의존하여(리액트에서 상태는 이전의 상태를 또 불러줘야 없어지지 않는다.)  최신의 상태를 작성할 때 이슈가 생길수도 있다고? 한다.\n    // setUserInput((prevState)=>{ // 이 방법은 리액트를 하면서 자주 보게 될 방법이니 꼭 알아두자! \n    //     return {...prevState, enteredAmount: event.target.value}\n    // })\n  }; // Date 상태 변경 함수 ( onChange )\n\n\n  const dateChangeHandler = event => {\n    setEnteredDate(event.target.value); // setUserInput({\n    //     ...userInput,\n    //     enteredDate:event.target.value,\n    // })\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n    const expenseData = {\n      title: enteredTitle,\n      amount: enteredAmount,\n      date: new Date(enteredDate)\n    };\n    props.onSaveExpenseData(expenseData);\n    setEnteredTitle('');\n    setEnteredAmount('');\n    setEnteredDate('');\n  };\n\n  const view = () => {\n    setViewForm(!viewForm);\n  };\n\n  const Form = () => {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"new-expense__control\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: enteredTitle,\n            onChange: titleChangeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"new-expense__control\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: enteredAmount,\n            min: \"0.01\",\n            step: \"0.01\",\n            placeholder: \"0\",\n            onChange: amountChangeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"new-expense__control\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"Date\",\n            value: enteredDate,\n            min: \"2022-01-01\",\n            max: \"2023-12-31\",\n            onChange: dateChangeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"new-expense__actions\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      children: \"cancel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      onClick: view,\n      children: \"Add Expense\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ExpenseForm, \"c3wA9dfIv7PcRRWCqWFGTPWV2u8=\");\n\n_c = ExpenseForm;\nexport default ExpenseForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpenseForm\");","map":{"version":3,"names":["React","useState","ExpenseForm","props","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","viewForm","setViewForm","titleChangeHandler","event","target","value","amountChangeHandler","dateChangeHandler","submitHandler","e","preventDefault","expenseData","title","amount","date","Date","onSaveExpenseData","view","Form"],"sources":["/home/hyunjun/연습_git_react_practice/01-starting-setup/src/conponents/NewExpense/ExpenseForm.js"],"sourcesContent":["import React,{useState} from 'react'\n\nimport './ExpenseForm.css'\n\nconst ExpenseForm = (props)=>{\n    const [enteredTitle,setEnteredTitle] = useState('')\n// Title 관련 useState\n    const [enteredAmount,setEnteredAmount] = useState('')\n// Amount 관련 useState\n    const [enteredDate,setEnteredDate] = useState('')\n// Date 관련 useState\n\n    const [viewForm,setViewForm] = useState(false)\n\n    // const [userInput, setUserInput]=useState({ // 여러개의 상태를 하나의 상태로 만들어줌.\n    //     enteredTitle: '',\n    //     enteredAmount: '',\n    //     enteredDate: ''\n    // })\n\n    // Title 상태 변경 함수 ( onChange )\n    const titleChangeHandler = (event)=>{\n        setEnteredTitle(event.target.value)\n        // setUserInput({\n        //     ...userInput, // 앞에 내용을 복사하지 않으면 state는 전에 있던 내용을 간직하는게 아니라 현재의 값만 남겨버린다.\n        //     // 그래서 전에 값을 복사하고 변경되는 값만 재할당 해준다.\n        //     enteredTitle:event.target.value,\n        // })\n    }\n\n    // Amount 상태 변경 함수 ( onChange )\n    const amountChangeHandler = (event)=>{\n        setEnteredAmount(event.target.value)\n        // titleChangeHandler 와 다른 방법이 있는데 이 방법을 사용하는 것이 더 좋아보인다. \n        // 그 이유는 객체의 상태로 리액트를 계속 사용하게 되면 이전의 상태에 의존하여(리액트에서 상태는 이전의 상태를 또 불러줘야 없어지지 않는다.)  최신의 상태를 작성할 때 이슈가 생길수도 있다고? 한다.\n        // setUserInput((prevState)=>{ // 이 방법은 리액트를 하면서 자주 보게 될 방법이니 꼭 알아두자! \n        //     return {...prevState, enteredAmount: event.target.value}\n        // })\n    }\n\n\n    // Date 상태 변경 함수 ( onChange )\n    const dateChangeHandler = (event)=>{\n        setEnteredDate(event.target.value)\n        // setUserInput({\n        //     ...userInput,\n        //     enteredDate:event.target.value,\n        // })\n    }\n\n    const submitHandler = (e) =>{\n        e.preventDefault()\n\n        const expenseData ={\n            title: enteredTitle,\n            amount: enteredAmount,\n            date: new Date(enteredDate)\n        };\n\n        props.onSaveExpenseData(expenseData)\n\n        setEnteredTitle('')\n        setEnteredAmount('')\n        setEnteredDate('')\n    }\n\n    const view = () => {\n        setViewForm(!viewForm)\n\n    }\n\n    const Form = () => {\n        return (\n            <form onSubmit={submitHandler}>\n            <div className='new-expense__controls'>\n                <div className='new-expense__control'>\n                    <label>Title</label>\n                    <input type=\"text\" value={enteredTitle} onChange={titleChangeHandler}/>\n                </div>\n                <div className='new-expense__control'>\n                    <label>Amount</label>\n                    <input type=\"number\" value={enteredAmount} min=\"0.01\" step=\"0.01\" placeholder='0' onChange={amountChangeHandler}/>\n                </div>\n                <div className='new-expense__control'>\n                    <label>Date</label>\n                    <input type=\"Date\" value={enteredDate} min=\"2022-01-01\" max=\"2023-12-31\" onChange={dateChangeHandler} />\n                </div>\n            </div>\n        </form>\n        )\n    }\n\n    return (\n        <div className='new-expense__actions'>\n            <button type='button'>cancel</button>\n            <button type='submit' onClick={view}>Add Expense</button>\n        </div>\n    )\n}\n\nexport default ExpenseForm"],"mappings":"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"},"metadata":{},"sourceType":"module"}